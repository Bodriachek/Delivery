# Generated by Django 3.2.1 on 2022-05-07 19:20

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150, null=True, verbose_name='Назва')),
                ('category', models.IntegerField(choices=[(1, 'B'), (2, 'C1'), (3, 'C')], verbose_name='Водійська категорія')),
                ('load_capacity', models.PositiveSmallIntegerField(help_text='Вказувати в кілограмах', null=True, verbose_name='Вантажопідйомність')),
                ('state_number', models.CharField(help_text='Код регіону__регістраційний номер__серія', max_length=10, null=True, verbose_name='Державний номер')),
                ('width', models.FloatField(help_text='Вказувати в метрах', null=True, verbose_name='Ширина кузова')),
                ('length', models.FloatField(help_text='Вказувати в метрах', null=True, verbose_name='Довжина кузова')),
                ('height', models.FloatField(help_text='Вказувати в метрах', null=True, verbose_name='Висота кузова')),
                ('type_fuel', models.IntegerField(choices=[(1, 'БЕНЗИН'), (2, 'ДП'), (3, 'ГАЗ')], null=True, verbose_name='Тип палива')),
                ('fuel_consumption', models.PositiveSmallIntegerField(null=True, verbose_name='Споживання палива на 100 км')),
            ],
            options={
                'verbose_name': 'Автомобіль',
                'verbose_name_plural': 'Автомобілі',
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categories', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'B'), (2, 'C1'), (3, 'C')], max_length=5, null=True, verbose_name='Категорії водія')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Водій',
                'verbose_name_plural': 'Водії',
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_status', models.IntegerField(choices=[(1, 'Нова заявка'), (2, 'В обробці'), (3, 'Готується до відправки'), (4, 'Завершено')], null=True, verbose_name='Статус заявки')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name="Ім'я отримувача")),
                ('phone', models.CharField(default='+380 ', max_length=20, verbose_name='Телефон отримувача')),
                ('address', models.CharField(blank=True, help_text='Область, населений пункт, вулиця, номер будинку та квартири(за потребою)', max_length=255, null=True, verbose_name='Адреса отримувача')),
                ('date_trip', models.DateField(default=datetime.date.today, verbose_name='Дата доставки')),
                ('order_weight', models.PositiveIntegerField(default=0, help_text='Введіть приблизну загальну вагу в кілограмах', verbose_name='Загальна вага')),
                ('total_distance', models.FloatField(help_text='Вказується в кілометрах', null=True, verbose_name='Загальна відстань рейсу')),
                ('amount_trip', models.PositiveSmallIntegerField(default=1, verbose_name='Кількість поїздок')),
                ('car', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='delivery.cars', verbose_name='Автомобіль')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Замовник')),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='delivery.driver')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='delivery.manager', verbose_name='Замовник')),
            ],
            options={
                'verbose_name': 'Замовлення',
                'verbose_name_plural': 'замовлення',
            },
        ),
        migrations.CreateModel(
            name='Repairs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('what_repair', models.CharField(max_length=200, null=True, verbose_name='Що ремонтується?')),
                ('deadline', models.DateField(default=datetime.date.today, verbose_name='Коли ремонт буде завершено?')),
                ('cost', models.PositiveIntegerField(null=True, verbose_name='Вартість ремонту')),
                ('car', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='delivery.cars', verbose_name='Автомобіль')),
            ],
            options={
                'verbose_name': 'Реєстрація заправки',
                'verbose_name_plural': 'Реєстрація заправок',
            },
        ),
        migrations.CreateModel(
            name='RegistrationRefueling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_fuel', models.IntegerField(choices=[(1, 'БЕНЗИН'), (2, 'ДП'), (3, 'ГАЗ')], null=True, verbose_name='Тип палива')),
                ('amount_fuel', models.FloatField(help_text='В літрах', null=True, verbose_name='Кількість палива')),
                ('price', models.FloatField(help_text='В грн.', null=True, verbose_name='Вартість палива')),
                ('total_price', models.FloatField(help_text='В грн.', null=True, verbose_name='Загальна вартість')),
                ('fuel_check', models.ImageField(blank=True, null=True, upload_to='checks/')),
                ('car', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='delivery.cars', verbose_name='Автомобіль')),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='delivery.driver')),
            ],
            options={
                'verbose_name': 'Реєстрація заправки',
                'verbose_name_plural': 'Реєстрація заправок',
            },
        ),
        migrations.AddField(
            model_name='cars',
            name='responsible_driver',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='delivery.driver'),
        ),
        migrations.CreateModel(
            name='BaseInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, null=True, verbose_name="Ім'я")),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Прізвище')),
                ('phone', models.CharField(default='+380 ', max_length=20, verbose_name='Номер телефону')),
                ('birth_date', models.DateField(default=datetime.date.today, verbose_name='Дата народження')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
